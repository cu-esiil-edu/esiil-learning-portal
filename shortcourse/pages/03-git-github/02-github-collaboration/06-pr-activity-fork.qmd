---
title: Practice Forking a GitHub Repository and Submitting Pull Requests
author:
  - Leah Wasser
  - Jenny Palomino
  - Max Joseph
  - Elsa Culler
description: |
  A pull request allows anyone to suggest changes to a repository on GitHub
  that can be easily reviewed by others. Learn how to submit pull requests on GitHub.com
  to suggest changes to a GitHub repository.
learning-goals:
  - Distinguish between a **fork** and a **branch**.
  - Explain the relationship between a forked repository (head) and the original repository (base).
  - Submit a pull request from a **fork** to suggest changes in someone else's repository
jupyter: python3
---

For this assignment, you will add a row to a `.csv` file with information about your hometown to **someone else's repository**. The Home Towns repository belongs to GitHub user `cu-esiil-edu`.

## Branches and Forks

When you're collaborating with someone on GitHub, you'll find you want to be able to propose changes without actually making them to the default version. This is important for all collaboration (think about other online collaboration tools like Google Docs) -- but it is *especially* important for code, because one error can break the whole thing. You want to make sure that all the code works together as expected before merging.

GitHub has two different methods for making changes, **branches** and **forks**. **Branches** are for when you are a part of the core team for a project. **Forks** are for when you are contributing to someone else's project. The key difference is that **you own your fork**, but you don't own a branch. This allows repository owners to protect their repository a little more carefully.

After you have made changes in a branch or a fork, you can propose them to the administrators as a Pull Request or PR. We do this because:
  
  * Administrators to review and test code before merging it into the default version
  * Even if you are positive your code works, it is polite to ask permission before changing someone else's code (although most people will protect their default branch so you wouldn't be able to change the default anyway). Otherwise you could break something and the owner wouldn't know!
  * PRs are a much more robust collaboration workflow in large projects -- they help avoid embarrassing public errors and crashes.

## Step 1: Fork the GitHub repo

To begin, fork the [ESIIL Education Hometowns GitHub repository](https://github.com/cu-esiil-edu/hometowns)
Remember that this step only needs to be done once. When you create this fork, you then have full ownership of the fork in your user account. Full ownership means that you can make direct changes to the fork without submitting a Pull Request.

::: {.content-visible when-profile="advanced"}
After you have forked the repo, clone it so that you have a copy locally to work with on your computer. 

::: {.callout-tip}
# Data Tip

Remember that you can use `git remote -v` in the terminal to view the url path of your clone. This will allow you to ensure that your cloned your FORK rather than the repo owned by **earthlab-education**. 
:::
:::

## Step 2: Add a row to hometowns.csv

  1. Click on the `hometowns.csv` file. 

     ![Click on the `hometowns.csv` file.](/img/earth-analytics/git-version-control/pr-activity/hometowns_csv.png)

  2. Then, click on the edit button in the upper right. If you haven't forked the repository yet, you will be asked to at this point.

     ![Click the edit button](/img/earth-analytics/git-version-control/pr-activity/edit.png)

  3. Add at least one new row to the `hometowns.csv` file for your hometown -- that could be where you live now, somewhere you used to live, or another important location for you. You will add the following information to the file, separated by commas:

      * **program** you are participating in. The options include: 

        1. EDA Certificate
        2. ESIIL Stars
        3. Short Course
        4. Summit
        5. Hackathon

      * **date**: today's date in YYYY-MM-DD format (for example, January 5, 2024 would be 2024-01-05)
      * **type**: the type of entry this is. The options include:

        1. Where I live now
        2. Place I've lived
        3. Place I love

      * **label**: a few sentences about your place
      * **image_url**: the URL to an image you want to display on the hometowns map
      * **image_credit**: how you want to credit your image
      * **latitude**: the latitude of your place
      * **longitude**: the longitude of your place

  The file will look something like this once you add your information:  

  ```csv
  program,date,type,label,image_url,image_credit,latitude,longitude
  Short Course,2024-04-07,Where I live now,Home of ESIIL at the University of Colorado,https://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Flatirons_Winter_Sunrise.jpg/1024px-Flatirons_Winter_Sunrise.jpg,Taken by Jesse Varner | https://commons.wikimedia.org/wiki/File:Flatirons_Winter_Sunrise.jpg,40.016870,-105.279620
  ```

::: {.content-visible unless-profile="advanced"}
  4. Click `Commit`
  5. Write a message so you can go back to this point if you want to.
  6. Confirm by selecting `Commit`
:::

::: {.content-visible when-profile="advanced"}
Next, you will need to push your changes up to GitHub:

  1. Use `git add` and `git commit` to commit the changes locally. 
  2. Then, use `git push` to push those changes up to your fork.
:::

## Step 3:  Submit a Pull Request To the earthlab-education/ea-bootcamp-hometowns repo

Now that you have made some changes to your fork, submit a `pull request` from your fork to the original repository:

  1. Select the `Pull Requests` tab.
  2. You should see a banner saying that you are ahead of the base repository. Select the link in the banner to create a PR with your changes.
  3. Include the following in your pull request: 

      - There are a lot of similar PRs in this repository. In the **message**, include your username and the place you are submitting so the owner can tell the PRs apart easily.
      - In the **description**, notify the owner of the repository (your instructor) that you have addressed the issue using `@github-username`.
      - Reference the issue number using `Fixes #issue-number` (e.g. the issue number is above in the title of this issue). If you are working independently, you may not have an issue with your name on it! Just submit the PR without mentioning an issue.

  4. Confirm by selecting `Create Pull Request`.

::: {.callout-important}
Be sure to check that the changes you are submitted look correct in the Pull Request before you consider your work, done!
:::